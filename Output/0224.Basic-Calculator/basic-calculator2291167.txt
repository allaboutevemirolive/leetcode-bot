// https://leetcode.com/problems/basic-calculator/solutions/2291167/c-rust-faster-than-100-explained/
impl Solution {
	pub fn calculate(s: String) -> i32 {
		let mut st: Vec<i32> = Vec::new();
		let mut ans: i32 = 0;
		let mut num: i32= 0;
		let mut sign: i32 = 1;
		st.push(sign);
		for ch in s.chars(){
			match ch {
				' ' => {}
				'+' | '-' => {
					ans+= num*sign;
					sign = st.last().unwrap() * if ch=='+'{1}else {-1};
					num=0;
				}
				'(' => {st.push(sign);}
				')' => {st.pop();}
				_ => {
					num = num*10 + (ch as i32 - '0' as i32)
				}
			}
		}
		ans += num*sign;
		ans
	}
}