// https://leetcode.com/problems/sliding-window-maximum/solutions/3081008/faster-solution/
impl Solution {
    pub fn max_sliding_window(nums: Vec<i32>, k: i32) -> Vec<i32> {
        let k = k as usize;
        let mut result = Vec::new();
        let mut queue = std::collections::VecDeque::new();
        for (idx, &num) in nums.iter().enumerate() {
            while !queue.is_empty() && nums[*queue.back().unwrap()] <= num {
                queue.pop_back();
            }
            queue.push_back(idx);
            if *queue.front().unwrap() + k <= idx {
                queue.pop_front();
            }
            if k - 1 <= idx {
                result.push(nums[*queue.front().unwrap()]);
            }
        }
        result
    }
}