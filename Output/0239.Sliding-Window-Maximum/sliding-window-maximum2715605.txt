// https://leetcode.com/problems/sliding-window-maximum/solutions/2715605/simple-implementation-vecdeque/
use std::collections::VecDeque;

impl Solution {
    pub fn max_sliding_window(nums: Vec<i32>, k: i32) -> Vec<i32> {

        let mut result = Vec::new();
        let mut queue = VecDeque::new();

        for (i, &num) in nums.iter().enumerate() {
            
            while !queue.is_empty() && queue.front().unwrap() <= &(i as i32 - k) {
                queue.pop_front();
            }
 
            while !queue.is_empty() && nums[*queue.back().unwrap() as usize] < num {
                queue.pop_back();
            }

            queue.push_back(i as i32);

            if i as i32 >= k - 1 {
                result.push(nums[*queue.front().unwrap() as usize]);
            }
        }
        return result;
    }
}
