// https://leetcode.com/problems/trapping-rain-water/solutions/2592806/rust-readable-idiomatic-solution-using-stack-15-lines/
impl Solution {
    pub fn trap(height: Vec<i32>) -> i32 {
        let mut rez = 0;

        let mut m: Vec<usize> = Vec::new();
        for (end_i, &end) in height.iter().enumerate() {
            // println!("{m:?}");
            while !m.is_empty() && height[*m.last().unwrap()] as i32 <= end {
                let bottom_i = m.pop().unwrap();
                let bottom = height[bottom_i];
                let start_i = match m.last() {
                    Some(i) => *i,
                    None => continue,
                };
                let start = height[start_i];
                let v = (end_i - start_i - 1) as i32 * (end.min(start) - bottom);
                // println!("{start} ({start_i}), {bottom} ({bottom_i}), {end} ({end_i}), {v}");
                rez += v;
            }

            m.push(end_i);
        }

        rez
    }
}