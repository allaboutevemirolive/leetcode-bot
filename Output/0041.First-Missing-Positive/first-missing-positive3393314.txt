// https://leetcode.com/problems/first-missing-positive/solutions/3393314/rust-ideal-two-solutions-in-time-o-n-space-o-1/
impl Solution {
  pub fn first_missing_positive(mut nums: Vec<i32>) -> i32 {
    for i in 0..nums.len() {
      while nums[i] > 0 && nums[i] < nums.len() as i32 
            && nums[i] != nums[ (nums[i]-1) as usize] {
        let tmp = nums[i];
        let j = (nums[i] - 1) as usize;
        nums[i] = nums[j];
        nums[j] = tmp;
      }
    }

    for i in 0..nums.len() {
      let n = (i+1) as i32;
      if nums[i] != n {
        return n;
      }
    }
    (nums.len()+1) as i32
  }
}