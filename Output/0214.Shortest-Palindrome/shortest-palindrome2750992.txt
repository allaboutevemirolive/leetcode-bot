// https://leetcode.com/problems/shortest-palindrome/solutions/2750992/0-ms-solution/
    pub fn shortest_palindrome(s: String) -> String {
        if s.len() < 2 {
            return s;
        }
        let prime = 31;
        let m = 1e9 as i64 + 7;
        let mut pnos = 31;
        let mut ind = 0;
        let s_bytes = s.as_bytes();
        let mut shash = s_bytes[0] as i64 - 'a' as i64 + 1;
        let mut rhash = s_bytes[0] as i64 - 'a' as i64 + 1;
        for i in 1..s.len() {
            shash = (shash + (s_bytes[i] as i64 - 'a' as i64 + 1) * pnos) % m;
            rhash = (rhash * prime + (s_bytes[i] as i64 - 'a' as i64 + 1)) % m;
            pnos = (pnos * prime) % m;
            if shash == rhash {
                ind = i;
            }
        }
        let rev = s[ind + 1..].chars().rev().collect::<String>();
        rev + &s
    }