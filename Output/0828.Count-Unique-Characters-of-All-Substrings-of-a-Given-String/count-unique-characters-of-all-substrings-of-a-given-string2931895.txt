// https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/solutions/2931895/just-a-runnable-solution/
impl Solution {
    pub fn unique_letter_string(s: String) -> i32 {
        let mut last = vec![vec![-1; 26]; 2];
        let mut ret = 0;
        for (i, c) in s.bytes().enumerate() {
            let i = i as i32;
            let c = (c - b'A') as usize;
            ret += (i - last[0][c]) * (last[0][c] - last[1][c]);
            last[1][c] = last[0][c];
            last[0][c] = i as i32;
        }
        for c in 0..26 {
            ret += (s.len() as i32 - last[0][c]) * (last[0][c] - last[1][c]);
        }
        ret as i32
    }
}