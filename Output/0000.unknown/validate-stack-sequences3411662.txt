// https://leetcode.com/problems/validate-stack-sequences/solutions/3411662/rust-easy-imitating-stack-solution/
impl Solution {
    pub fn validate_stack_sequences(pushed: Vec<i32>, popped: Vec<i32>) -> bool {
        let mut stack = Vec::with_capacity(pushed.len());
        let (mut i, mut j) = (0, 0);
        while i < pushed.len() {
            if pushed[i] == popped[j] {
                i += 1;
                j += 1;
                while !stack.is_empty() && j < popped.len() && popped[j] == *stack.last().unwrap() {
                    stack.pop();
                    j += 1;
                }
            } else { 
                stack.push(pushed[i]);
                i += 1;
            }
        }
        while j < popped.len() {
            if stack.pop().unwrap() != popped[j] {
                return false
            }
            j += 1;
        }
        true
    }
}