// https://leetcode.com/problems/wildcard-matching/solutions/2745999/rust-o-n/
impl Solution {
    pub fn is_match(s: String, p: String) -> bool {
        let (mut i, mut j, mut match_i) = (0, 0, 0);
        let mut star_i: i32= - 1;
        let (s_len, p_len) = (s.len(), p.len());

        while i < s_len {
            if j < p_len && p.as_bytes()[j] as char == '*' {
                star_i = j as i32;
                match_i = i;
                j += 1;
            } else if j < p.len()
                    && (s.as_bytes()[i] == p.as_bytes()[j] || p.as_bytes()[j] as char =='?') {
                i += 1;
                j += 1;
            } else if star_i >= 0 {
                match_i += 1;
                i = match_i;
                j = (star_i + 1) as usize;
            } else { return false; }
        }
        while j < p_len && p.as_bytes()[j] as char == '*' {
            j += 1;
        }
        return j == p.len();
    }
}