// https://leetcode.com/problems/first-missing-positive/solutions/1818337/rust/
impl Solution {
    pub fn first_missing_positive(nums: Vec<i32>) -> i32 {
        // swap method
        // postive -> arr[postive-1]
        
        let mut nums = nums;
        for i in 0..nums.len() {
            while (nums[i]>0) && (nums[i]<nums.len() as i32) && (nums[i]!=i as i32+1) {
                let j = nums[i] as usize-1;
                if nums[j]==nums[i] {break}
                nums.swap(i, j);
            }
        }
        
        for i in 0..nums.len() {
            if i as i32+1 != nums[i] {
                return i as i32 +1
            }
        }

        nums.len() as i32 +1
    }
}
