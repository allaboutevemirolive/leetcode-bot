// https://leetcode.com/problems/first-missing-positive/solutions/1739968/rust-cyclic-sort/
	pub fn first_missing_positive(nums: Vec<i32>) -> i32 {
        let mut i = 0;
        let mut nums = nums;
        
        while i < nums.len() {
            while i < nums.len() 
                && nums[i] - 1 != i as i32
                && nums[i] - 1 >= 0 
                && nums[i] - 1 < nums.len() as i32 
                && nums[i] != nums[(nums[i] - 1) as usize] {
                    let idx = nums[i] - 1;
                    nums.swap(i, idx as usize);
            }
            i += 1;
        }

        for i in 0..nums.len() {
            if (i + 1) as i32 != nums[i] {
                return (i + 1) as i32;
            }
        }
        
        (nums.len() + 1) as i32
    }