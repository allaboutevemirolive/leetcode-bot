// https://leetcode.com/problems/sudoku-solver/solutions/3335877/rust-sol-0-ms/
impl Solution {
    pub fn solve_sudoku(board: &mut Vec<Vec<char>>) {
        Self::solve_helper(board, 0, 0);
    }
    
    fn solve_helper(board: &mut Vec<Vec<char>>, row: usize, col: usize) -> bool {
        if row == 9 {
            return true;
        }
        if col == 9 {
            return Self::solve_helper(board, row + 1, 0);
        }
        if board[row][col] != '.' {
            return Self::solve_helper(board, row, col + 1);
        }
        for k in 1..=9 {
            let c = k.to_string().chars().next().unwrap();
            if Self::is_valid(board, row, col, c) {
                board[row][col] = c;
                if Self::solve_helper(board, row, col + 1) {
                    return true;
                }
                board[row][col] = '.';
            }
        }
        false
    }
    
    fn is_valid(board: &Vec<Vec<char>>, row: usize, col: usize, c: char) -> bool {
        // Перевірити рядок
        for j in 0..9 {
            if board[row][j] == c {
                return false;
            }
        }
        // Перевірити колонку
        for i in 0..9 {
            if board[i][col] == c {
                return false;
            }
        }
        // Позначте підпункт
        let i_start = (row / 3) * 3;
        let j_start = (col / 3) * 3;
        for i in i_start..i_start + 3 {
            for j in j_start..j_start + 3 {
                if board[i][j] == c {
                    return false;
                }
            }
        }
        true
    }
}
